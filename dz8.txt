1.1 Определить сложность следующих алгоритмов:
-. Поиск элемента массива с известным индексом
-. Дублирование одномерного массива через foreach
-. Рекурсивная функция нахождения факториала числа
-. Удаление элемента массива с известным индексом
.
1.2.Определить сложность следующих алгоритмов. Сколько произойдет итераций?
a)

$n = 10000;
$array[]= [];

for ($i = 0; $i < $n; $i++) {
  for ($j = 1; $j < $n; $j *= 2) {
     $array[$i][$j]= true;
} }
b)

$n = 10000;
$array[] = [];

for ($i = 0; $i < $n; $i += 2) {
  for ($j = $i; $j < $n; $j++) {
   $array[$i][$j]= true;
} }
c)
```
$n = 10000;
$array[] = [];
foo($n);

function foo($n)
{
while ($n > 0) {
for ($j =0; $j < $n; $j++) {
$n--;
foo($n);
}
}
}
```

2. Проверить баланс скобок в выражении, игнорируя любые внуренние символы. В решении по возможности испольщовать SplStack.
Примеры:

"Это тестовый вариант проверки (задачи со скобками). И вот еще скобки: {[][()]}" - true
((a + b)/ c) - 2 - true
"([ошибка)" - false
"(") - false

2.1* В задаче выше учитывать, что двойные и одинарные кавычки работают как в файле .php, т.е. контент внутри рассматривается исключительно как текст (даже скобки)
3. Простые делители числа 13195 - это 5, 7, 13 и 29. Каков самый большой делитель числа 600851475143, являющийся простым числом? Проверить ответ можно здесь(нужна регистрация)